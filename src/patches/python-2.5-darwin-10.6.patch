diff -ru Include/pymactoolbox.h Include/pymactoolbox.h
--- Include/pymactoolbox.h	2004-11-05 08:02:59.000000000 +0100
+++ Include/pymactoolbox.h	2009-09-05 01:35:54.000000000 +0200
@@ -134,6 +134,7 @@
 extern int GWorldObj_Convert(PyObject *, GWorldPtr *);
 
 /* Qt exports */
+/*
 extern PyObject *TrackObj_New(Track);
 extern int TrackObj_Convert(PyObject *, Track *);
 extern PyObject *MovieObj_New(Movie);
@@ -146,6 +147,7 @@
 extern int UserDataObj_Convert(PyObject *, UserData *);
 extern PyObject *MediaObj_New(Media);
 extern int MediaObj_Convert(PyObject *, Media *);
+*/
 
 /* Res exports */
 extern PyObject *ResObj_New(Handle);
diff -ru Include/pyport.h Include/pyport.h
--- Include/pyport.h	2008-02-14 12:26:18.000000000 +0100
+++ Include/pyport.h	2009-09-05 01:35:15.000000000 +0200
@@ -293,11 +293,23 @@
 #if defined(PYOS_OS2) && defined(PYCC_GCC)
 #include <sys/types.h>
 #endif
+
+#if (defined __APPLE__) && (!defined _POSIX_C_SOURCE)
+#define TEMPORARILY_DEFINING__POSIX_C_SOURCE    /* so we can #undef it later */
+#define _POSIX_C_SOURCE   /* avoid deprecated struct ostat in sys/stat.h */
+#endif
+
 #include <sys/stat.h>
 #elif defined(HAVE_STAT_H)
 #include <stat.h>
 #endif
 
+/* Mac OS X: undefine _POSIX_C_SOURCE if it wasn't defined before */
+#ifdef TEMPORARILY_DEFINING__POSIX_C_SOURCE
+#undef _POSIX_C_SOURCE
+#undef TEMPORARILY_DEFINING__POSIX_C_SOURCE
+#endif
+
 #if defined(PYCC_VACPP)
 /* VisualAge C/C++ Failed to Define MountType Field in sys/stat.h */
 #define S_IFMT (S_IFDIR|S_IFCHR|S_IFREG)
@@ -544,6 +556,7 @@
 /* BSDI does not supply a prototype for the 'openpty' and 'forkpty'
    functions, even though they are included in libutil. */
 #include <termios.h>
+struct winsize;
 extern int openpty(int *, int *, char *, struct termios *, struct winsize *);
 extern int forkpty(int *, char *, struct termios *, struct winsize *);
 #endif /* !defined(HAVE_PTY_H) && !defined(HAVE_LIBUTIL_H) */
diff -ru Mac/Modules/MacOS.c Mac/Modules/MacOS.c
--- Mac/Modules/MacOS.c	2006-07-25 21:20:54.000000000 +0200
+++ Mac/Modules/MacOS.c	2009-09-05 02:12:09.000000000 +0200
@@ -40,13 +40,14 @@
 
 typedef struct {
 	PyObject_HEAD
-	short fRefNum;
+	FSIORefNum fRefNum;
 	int isclosed;
 } rfobject;
 
 static PyTypeObject Rftype;
 
 
+#if 0
 
 /* ---------------------------------------------------------------- */
 
@@ -551,7 +552,9 @@
 	if ( (fp = newrfobject()) == NULL )
 		return NULL;
 		
+/*
 	err = HOpenRF(fss.vRefNum, fss.parID, fss.name, permission, &fp->fRefNum);
+*/
 	
 	if ( err == fnfErr ) {
 		/* In stead of doing complicated things here to get creator/type
@@ -572,7 +575,9 @@
 			return NULL;
 		}
 		fclose(tfp);
+/*
 		err = HOpenRF(fss.vRefNum, fss.parID, fss.name, permission, &fp->fRefNum);
+*/
 	}
 	if ( err ) {
 		Py_DECREF(fp);
@@ -582,9 +587,11 @@
 	fp->isclosed = 0;
 	return (PyObject *)fp;
 }
+#endif
 
 
 static PyMethodDef MacOS_Methods[] = {
+#if 0
 	{"GetCreatorAndType",		MacOS_GetCreatorAndType, 1,	getcrtp_doc},
 	{"SetCreatorAndType",		MacOS_SetCreatorAndType, 1,	setcrtp_doc},
 	{"GetErrorString",		MacOS_GetErrorString,	1,	geterr_doc},
@@ -594,6 +601,7 @@
 	{"GetTicks",			MacOS_GetTicks,		1,	GetTicks_doc},
 	{"SysBeep",			MacOS_SysBeep,		1,	SysBeep_doc},
 	{"WMAvailable",			MacOS_WMAvailable,		1,	WMAvailable_doc},
+#endif
 	{NULL,				NULL}		 /* Sentinel */
 };
 
diff -ru Mac/Modules/gestaltmodule.c Mac/Modules/gestaltmodule.c
--- Mac/Modules/gestaltmodule.c	2006-05-29 23:58:42.000000000 +0200
+++ Mac/Modules/gestaltmodule.c	2009-10-07 17:35:21.000000000 +0200
@@ -34,7 +34,7 @@
 {
 	OSErr iErr;
 	OSType selector;
-	long response;
+	SInt32 response;
 	if (!PyArg_ParseTuple(args, "O&", PyMac_GetOSType, &selector))
 		return NULL;
 	iErr = Gestalt ( selector, &response );
diff -ru Python/mactoolboxglue.c Python/mactoolboxglue.c
--- Python/mactoolboxglue.c	2006-07-11 18:44:25.000000000 +0200
+++ Python/mactoolboxglue.c	2009-09-05 01:35:40.000000000 +0200
@@ -417,6 +417,7 @@
 GLUE_NEW(GWorldPtr, GWorldObj_New, "Carbon.Qdoffs")
 GLUE_CONVERT(GWorldPtr, GWorldObj_Convert, "Carbon.Qdoffs")
 
+/*
 GLUE_NEW(Track, TrackObj_New, "Carbon.Qt")
 GLUE_CONVERT(Track, TrackObj_Convert, "Carbon.Qt")
 GLUE_NEW(Movie, MovieObj_New, "Carbon.Qt")
@@ -429,6 +430,7 @@
 GLUE_CONVERT(UserData, UserDataObj_Convert, "Carbon.Qt")
 GLUE_NEW(Media, MediaObj_New, "Carbon.Qt")
 GLUE_CONVERT(Media, MediaObj_Convert, "Carbon.Qt")
+*/
 
 GLUE_NEW(Handle, ResObj_New, "Carbon.Res")
 GLUE_CONVERT(Handle, ResObj_Convert, "Carbon.Res")
diff -ru configure configure
--- configure	2008-12-13 15:13:52.000000000 +0100
+++ configure	2009-09-05 01:35:15.000000000 +0200
@@ -4534,7 +4534,6 @@
 	    ;;
 	# is there any other compiler on Darwin besides gcc?
 	Darwin*)
-	    BASECFLAGS="$BASECFLAGS -Wno-long-double -no-cpp-precomp -mno-fused-madd"
 	    if test "${enable_universalsdk}"; then
 		BASECFLAGS="-arch ppc -arch i386 -isysroot ${UNIVERSALSDK} ${BASECFLAGS}"
 	    fi
diff -ru pyconfig.h.in pyconfig.h.in
--- pyconfig.h.in	2008-09-07 08:42:43.000000000 +0200
+++ pyconfig.h.in	2009-09-05 01:35:15.000000000 +0200
@@ -372,9 +372,6 @@
 /* Define to 1 if you have the `plock' function. */
 #undef HAVE_PLOCK
 
-/* Define to 1 if you have the `poll' function. */
-#undef HAVE_POLL
-
 /* Define to 1 if you have the <poll.h> header file. */
 #undef HAVE_POLL_H
 
@@ -937,6 +934,8 @@
 /* Define to activate features from IEEE Stds 1003.1-2001 */
 #undef _POSIX_C_SOURCE
 
+#define _DARWIN_C_SOURCE
+
 /* Define if you have POSIX threads, and your system does not define that. */
 #undef _POSIX_THREADS
 
