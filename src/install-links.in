#!/usr/bin/env python
import glob
import os
import sys


def yesno(question):
    question = "%s [yes/No] " % question
    answers = {
        False: ('', 'n', 'no'),
        True: ('y', 'yes'),
    }
    while 1:
        answer = raw_input(question).lower()
        for option in answers:
            if answer in answers[option]:
                return option
        print >>sys.stderr, "You have to answer with y, yes, n or no."


buildout = "${buildout:directory}"
prefix = "${install-links:prefix}"
bindir = os.path.join(prefix, 'bin')


if not os.path.exists(bindir):
    if not yesno("Create directory '%s'?" % bindir):
        sys.exit(1)
    os.makedirs(bindir)


files = []
files.extend(glob.glob(os.path.join(buildout, 'bin', 'virtualenv-*')))
files.extend(glob.glob(os.path.join(buildout, 'python-*', 'bin', 'python[23].*')))
files.extend(glob.glob(os.path.join(buildout, 'python-*', 'bin', 'easy_install-*')))
files.extend(glob.glob(os.path.join(buildout, 'python-*', 'bin', 'pip-*')))
# files.extend(glob.glob(os.path.join(buildout, 'parts', 'opt', 'bin', 'pyvenv-*')))
files.sort()

# links = [(x, os.path.basename(x)) for x in files]
links = []
for f in files:
    symlink = os.path.basename(f)
    if f.find('virtualenv-') < 0:
        symlink = symlink+'-'+f.split('/')[-3].split('-', 1)[1]
    links.append((f, symlink))

links.append((os.path.join(buildout, 'pypy', 'bin', 'pypy'), 'pypy'))
links.append((os.path.join(buildout, 'pypy', 'bin', 'easy_install'), 'easy_install-pypy'))
links.append((os.path.join(buildout, 'pypy', 'bin', 'pip'), 'pip-pypy'))
links.append((os.path.join(buildout, 'pypy3', 'bin', 'pypy'), 'pypy3'))
links.append((os.path.join(buildout, 'pypy3', 'bin', 'easy_install'), 'easy_install-pypy3'))
links.append((os.path.join(buildout, 'pypy3', 'bin', 'pip'), 'pip-pypy3'))
for src, name in links:
    if not os.path.exists(src):
        continue
    dst = os.path.join(bindir, name)
    if os.path.lexists(dst):
        if os.path.islink(dst):
            if os.readlink(dst) == src:
                print "No change needed for symlink to '%s' at '%s'." % (src, dst)
                continue
            else:
                if not yesno("Replace symlink at '%s' pointing to '%s' with symlink to '%s'?" % (dst, os.readlink(dst), src)):
                    continue
                os.unlink(dst)
        else:
            if not yesno("Replace regular file '%s' with symlink to '%s'?" % (dst, src)):
                continue
            os.unlink(dst)
    os.symlink(src, dst)
    print "Created symlink to '%s' at '%s'." % (src, dst)
